plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'raisetech'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {//コンパイルするときにアノテーションを見て制御する
    compileOnly{
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {//スターターの編集
    //Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.3'
    //Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //OpenAPI Generator
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    //Apache Commons Lang　便利機能、ユーティリティ
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //MySQLドライバ
    runtimeOnly 'com.mysql:mysql-connector-j'

    //MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    //APサーバー(Tomcat)
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    //SpringBoot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //MyBatis Test
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    // H2(InMemoryDB)
    testImplementation 'com.h2database:h2:2.2.224'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.forkOptions.jvmArgs += ['-XX:+EnableDynamicAgentLoading']
}

tasks.withType(Test).configureEach {
    jvmArgs += ['-XX:+EnableDynamicAgentLoading']
}
